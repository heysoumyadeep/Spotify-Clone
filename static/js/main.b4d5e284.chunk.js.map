{"version":3,"sources":["spotify.js","Login.js","SidebarOptions.js","DataLayer.js","Sidebar.js","Header.js","SongRow.js","Body.js","Footer.js","Player.js","App.js","reportWebVitals.js","reducer.js","index.js"],"names":["loginUrl","join","Login","className","src","alt","href","rel","target","SidebarOptions","items","Icon","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","Sidebar","playlists","HomeIcon","SearchIcon","LibraryMusicIcon","map","playlist","name","Header","user","Avatar","images","url","display_name","SongRow","track","minutes","Math","floor","duration_ms","seconds","toFixed","trackTime","album","artists","artist","release_date","Body","spotify","discover_weekly","description","fontSize","tracks","item","duration","Footer","Slider","Grid","container","spacing","xs","Player","SpotifyWebApi","App","useState","token","setToken","dispatch","useEffect","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","type","setAccessToken","getMe","then","getUserPlaylists","getPlaylist","response","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","state","action","console","log","playing","top_artists","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4d5e284.chunk.js","sourcesContent":["export const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\n\r\nconst redirectUri = \"https://heysoumyadeep.github.io/Spotify-Clone/\";\r\n\r\nconst clientId = \"b7bd3ab00a094ceaac4503b6e8f3fae4\"\r\n\r\nconst scopes = [\r\n    \"user-read-currently-playing\",\r\n    \"user-read-recently-played\",\r\n    \"user-read-playback-state\",\r\n    \"user-top-read\",\r\n    \"user-modify-playback-state\",\r\n  ];\r\n\r\n  export const getTokenFromUrl = () => {\r\n      return window.location.hash\r\n      .substring(1)\r\n      .split('&')\r\n      .reduce((initial, item) => {\r\n          let parts = item.split('=')\r\n          initial[parts[0]] = decodeURIComponent(parts[1]);\r\n          return initial;\r\n      },{});\r\n  }\r\n\r\n  export const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"&20\")}&response_type=token&show_dialog=true`;","import React from \"react\";\r\nimport \"./Login.css\";\r\nimport { loginUrl } from \"./spotify\";\r\n// Spotify Logo and Login Button\r\n\r\nfunction Login() {\r\n\r\n  const githubProf = \"https://github.com/heysoumyadeep\";\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <img\r\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n        alt=\"\" className=\"logo\"/>\r\n      <a href={loginUrl}>Login with Spotify</a>\r\n      \r\n      <div className='dev_info'>\r\n        <p>Made by Soumyadeep Pradhan</p>\r\n\r\n        <a href={githubProf} rel=\"noreferrer\" target=\"_blank\"> \r\n          <img src=\"https://img.icons8.com/color/48/000000/github--v1.png\"\r\n          alt=\"\" className=\"githubProfLogo\" />\r\n        </a>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport './SidebarOptions.css';\r\n\r\nfunction SidebarOptions({ items, Icon }) {\r\n    return (\r\n        <div className=\"sidebarOption\">\r\n            {Icon && <Icon className=\"sidebarOption_icon\" />}\r\n            {Icon ? <h4>{items}</h4> : <p>{items}</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarOptions\r\n","import React,{\r\n    createContext,\r\n    useContext,\r\n    useReducer,}\r\n    from 'react';\r\n\r\nexport const DataLayerContext = createContext();\r\n\r\nexport const DataLayer = ({initialState, reducer, children}) => (\r\n    <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </DataLayerContext.Provider>\r\n);\r\n\r\nexport const useDataLayerValue = () => useContext(DataLayerContext);","import React from 'react';\r\nimport './Sidebar.css';\r\nimport SidebarOptions from './SidebarOptions';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\r\nimport { useDataLayerValue } from './DataLayer';\r\n\r\nfunction Sidebar() {\r\n\r\n    const [{playlists}, dispatch] = useDataLayerValue();\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <img className=\"sidebar_logo\" src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\" alt=\"\" />\r\n            \r\n            <SidebarOptions items=\"Home\" Icon={HomeIcon} />\r\n            <SidebarOptions items=\"Search\" Icon={SearchIcon} />\r\n            <SidebarOptions items=\"Your Library\"Icon={LibraryMusicIcon} />\r\n\r\n            <br />\r\n            <strong className=\"sidebar_title\">PLAYLISTS</strong>\r\n            <hr />\r\n\r\n            {playlists?.items?.map(playlist => (\r\n                <SidebarOptions items={playlist.name} />\r\n            ))}\r\n            \r\n            <SidebarOptions items=\"Indian\" />\r\n            <SidebarOptions items=\"Rock\" />\r\n            <SidebarOptions items=\"Classic\" />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport './Header.css'\r\n// import SearchIcon from \"@material-ui/icons/Search\";\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForwardIosSharp';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBackIosSharp';\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\n\r\nfunction Header() {\r\n\r\n  const [{ user }, dispatch] = useDataLayerValue();\r\n\r\n  return (\r\n    <div className=\"header\" >\r\n      <div className=\"header_arrowContainer\">\r\n        <ArrowBackIcon  className=\"backArrow\" />\r\n        <ArrowForwardIcon  className=\"forwardArrow\" />\r\n      </div>\r\n\r\n      {/* <div className=\"header__left\">\r\n        <SearchIcon />\r\n        <input \r\n        placeholder=\"Search for Artists, Songs, or Podcasts \"\r\n        type=\"text\"\r\n        />\r\n      </div> */}\r\n\r\n      <div className=\"header_right\">\r\n        <Avatar src={user?.images[0]?.url} alt={user?.display_name} />\r\n        <h4>{user?.display_name}</h4>\r\n        <ArrowDropDownIcon />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header","import React from \"react\";\r\nimport \"./SongRow.css\";\r\n\r\nfunction SongRow({ track }) {\r\n\r\n  var minutes = Math.floor(track.duration_ms / 60000);\r\n  var seconds = ((track.duration_ms % 60000) / 1000).toFixed(0);\r\n  var trackTime = minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n\r\n  return (\r\n     <div className=\"songRow\">\r\n      <img className=\"songRow_album\" src={track.album.images[0].url} alt=\"\" />\r\n      <div className=\"songRow_info\">\r\n        <h1>{track.name}</h1>\r\n        <p>\r\n          {track.artists.map((artist) => artist.name).join(\", \")} -{\" \"}\r\n          {track.album.name}\r\n        </p>\r\n        <p className=\"songRow_albumName\">{track.album.name}</p>\r\n          <p className=\"songRow_albumRelease\" >{ track.album.release_date }</p>\r\n          <span className=\"songRow_infoDuration\">{\r\n            trackTime\r\n          }</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SongRow;","import React from 'react';\r\nimport './Body.css';\r\nimport Header from './Header';\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport SongRow from './SongRow';\r\nimport DurationIcon from '@material-ui/icons/AccessTimeSharp';\r\n\r\nfunction Body({ spotify }) {\r\n\r\n    const [{ discover_weekly }, dispatch] = useDataLayerValue();\r\n\r\n    return (\r\n        <div className='body'>\r\n            <Header spotify={spotify}/>\r\n            <div className='body_info'>\r\n                <img src={discover_weekly?.images[0].url} alt=\"\" className=\"\"/>\r\n                <div className='body_infoText'>\r\n                <strong>PLAYLIST</strong>\r\n                <h2>Discover Weekly</h2>\r\n                <p>{discover_weekly?.description}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"body_songs\">\r\n            <div className=\"body_icons\">\r\n                <PlayCircleFilledIcon className=\"body_shuffle\" />\r\n                <FavoriteIcon fontSize=\"large\" />\r\n                <MoreHorizIcon />\r\n            </div>\r\n\r\n            <ul className=\"body_songsHeader\">\r\n              <li className=\"body_songsNumber\"><p>#</p></li>\r\n              <li className=\"body_songsTitle\"><p>TITLE</p></li>\r\n              <li className=\"body_songsAlbum\"><p>ALBUM</p></li>\r\n            </ul>\r\n\r\n            <div className=\"body_songNumber\">\r\n              {discover_weekly?.tracks.items.map((item) => (\r\n                <SongRow track={item.track} duration={item.duration} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Body;","import React from 'react';\r\nimport \"./Footer.css\";\r\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\r\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\r\n// import PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\r\nimport { Grid, Slider } from \"@material-ui/core\";\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { useDataLayerValue } from \"./DataLayer\";\r\n// import { Favorite } from '@material-ui/icons';\r\nimport FavoriteIcon from \"@material-ui/icons/FavoriteBorderOutlined\";\r\nimport DevicesSharpIcon from '@material-ui/icons/DevicesSharp';\r\n\r\nfunction Footer() {\r\n\r\n  // const [{ token, item, playing }, dispatch] = useDataLayerValue();\r\n\r\n  // useEffect(() => {\r\n  //   spotify.getMyCurrentPlaybackState().then((r) => {\r\n  //     console.log(r);\r\n\r\n  //     dispatch({\r\n  //       type: \"SET_PLAYING\",\r\n  //       playing: r.is_playing,\r\n  //     });\r\n\r\n  //     dispatch({\r\n  //       type: \"SET_ITEM\",\r\n  //       item: r.item,\r\n  //     });\r\n  //   });\r\n  // }, []);\r\n\r\n  // const handlePlayPause = () => {\r\n  //   if (playing) {\r\n  //     spotify.pause();\r\n  //     dispatch({\r\n  //       type: \"SET_PLAYING\",\r\n  //       playing: false,\r\n  //     });\r\n  //   } else {\r\n  //     spotify.play();\r\n  //     dispatch({\r\n  //       type: \"SET_PLAYING\",\r\n  //       playing: true,\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  // const skipNext = () => {\r\n  //   spotify.skipToNext();\r\n  //   spotify.getMyCurrentPlayingTrack().then((r) => {\r\n  //     dispatch({\r\n  //       type: \"SET_ITEM\",\r\n  //       item: r.item,\r\n  //     });\r\n  //     dispatch({\r\n  //       type: \"SET_PLAYING\",\r\n  //       playing: true,\r\n  //     });\r\n  //   });\r\n  // };\r\n\r\n  // const skipPrevious = () => {\r\n  //   spotify.skipToPrevious();\r\n  //   spotify.getMyCurrentPlayingTrack().then((r) => {\r\n  //     dispatch({\r\n  //       type: \"SET_ITEM\",\r\n  //       item: r.item,\r\n  //     });\r\n  //     dispatch({\r\n  //       type: \"SET_PLAYING\",\r\n  //       playing: true,\r\n  //     });\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n    <div className=\"footer\">\r\n            <div className=\"footer_left\">\r\n                <img \r\n                className=\"footer_albumLogo\"\r\n                src=\"https://i.pinimg.com/originals/97/39/fe/9739fe3d4134a837230d7c1c92a30814.jpg\" \r\n                alt=\"\"\r\n                />\r\n                <div className=\"footer_songInfo\">\r\n                    <a href=\"\">\r\n                        <h5>Rockstar</h5>\r\n                    </a>\r\n                    <a href=\"\"><p>Post Malone</p></a>\r\n                </div>\r\n                <FavoriteIcon className=\"footer_heartCurrent\" />\r\n            </div>\r\n\r\n            <div className=\"footer_center\">\r\n                <ShuffleIcon className=\"footer_green\" />\r\n                <SkipPreviousIcon className=\"footer_icon\" />\r\n                <PlayCircleOutlineIcon \r\n                fontSize=\"large\"\r\n                className=\"footer_icon footer_play\" \r\n                />\r\n                <SkipNextIcon className=\"footer_icon\" />\r\n                <RepeatIcon className=\"footer_green\" />\r\n            </div>\r\n            <div className=\"footer_durationContainer\">\r\n              <span>02:14</span>\r\n              <Slider className=\"footer_durationBar\" />\r\n              <span>4:36</span>\r\n            </div>\r\n\r\n            <div className=\"footer_right\">\r\n              <div className=\"footer_rightContainer\">\r\n                <Grid container spacing={2}>\r\n                    <Grid item>\r\n                        <PlaylistPlayIcon className=\"footer_playlistIcon\" />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <DevicesSharpIcon className=\"footer_deviceIcon\" />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <VolumeDownIcon className=\"footer_volumeIcon\" />\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <Slider className=\"footer_volumeSlider\" />\r\n                    </Grid>\r\n                </Grid>\r\n              </div>\r\n            </div>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport './Player.css';\r\nimport Sidebar from './Sidebar';\r\nimport Body from './Body';\r\nimport Footer from './Footer';\r\n// import { useState, useEffect } from \"react\";\r\n// import SpotifyPlayer from \"react-spotify-web-playback\";\r\n\r\nfunction Player({spotify}) {\r\n    return (\r\n        <div className='player'>\r\n            <div className='player_body'>\r\n                <Sidebar />\r\n                <Body spotify={spotify}/>\r\n            </div>\r\n            <Footer spotify={spotify} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player\r\n","import React, {useEffect, useState} from 'react';\r\nimport './App.css';\r\nimport Login from './Login';\r\nimport {getTokenFromUrl} from './spotify'\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport Player from './Player';\r\nimport { useDataLayerValue } from './DataLayer';\r\n\r\nconst spotify = new SpotifyWebApi();\r\n\r\nfunction App() {\r\n\r\n  const [token, setToken] = useState(null);\r\n  const [{user}, dispatch] = useDataLayerValue();\r\n\r\n  useEffect(() => {\r\n    const hash = getTokenFromUrl();\r\n    window.location.hash = \"\";\r\n    const _token = hash.access_token;\r\n\r\n    if(_token){\r\n\r\n      dispatch({\r\n        type: \"SET_TOKEN\",\r\n        token: _token,\r\n      });\r\n\r\n      spotify.setAccessToken(_token);\r\n      setToken(_token);\r\n\r\n      spotify.getMe().then((user) => {\r\n        dispatch({\r\n          type: 'SET_USER',\r\n          user: user,\r\n        });\r\n      });\r\n\r\n      spotify.getUserPlaylists().then((playlists) => {\r\n        dispatch({\r\n          type: \"SET_PLAYLISTS\",\r\n          playlists: playlists,\r\n        });\r\n      });\r\n\r\n      spotify.getPlaylist('37i9dQZEVXbnrESiQFPwvN').then(response => {\r\n        dispatch({\r\n          type: \"SET_DISCOVER_WEEKLY\",\r\n          discover_weekly: response,\r\n        });\r\n      });\r\n\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {\r\n        token ? (\r\n          <Player spotify={spotify} />\r\n        ):(\r\n          <Login />\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { findAllByDisplayValue } from \"@testing-library/react\";\r\n\r\nexport const initialState = {\r\n  user: null,\r\n  playlists: [],\r\n  spotify: null,\r\n  discover_weekly: null,\r\n  top_artists: null,\r\n  playing: false,\r\n  item: null,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n\r\n    case \"SET_PLAYING\":\r\n      return {\r\n        ...state,\r\n        playing: action.playing,\r\n      };\r\n\r\n    case \"SET_ITEM\":\r\n      return {\r\n        ...state,\r\n        item: action.item,\r\n      };\r\n\r\n    case \"SET_DISCOVER_WEEKLY\":\r\n      return {\r\n        ...state,\r\n        discover_weekly: action.discover_weekly,\r\n      };\r\n\r\n    case \"SET_TOP_ARTISTS\":\r\n      return {\r\n        ...state,\r\n        top_artists: action.top_artists,\r\n      };\r\n\r\n    case \"SET_TOKEN\":\r\n      return {\r\n        ...state,\r\n        token: action.token,\r\n      };\r\n\r\n    case \"SET_SPOTIFY\":\r\n      return {\r\n        ...state,\r\n        spotify: action.spotify,\r\n      };\r\n\r\n    case \"SET_PLAYLISTS\":\r\n      return {\r\n        ...state,\r\n        playlists: action.playlists,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {DataLayer} from './DataLayer';\r\nimport reducer ,{initialState} from './reducer';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <DataLayer initialState={initialState} reducer={reducer}>\r\n    <App />\r\n    </DataLayer>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}